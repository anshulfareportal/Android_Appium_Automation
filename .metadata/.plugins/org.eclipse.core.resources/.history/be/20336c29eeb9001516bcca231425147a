package com.fp.core.cheapoair;
import org.testng.annotations.Test;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileElement;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.By.ByClassName;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Point;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.android.AndroidDriver;
//import org.openqa.selenium.android.AndroidDriver;
import org.openqa.selenium.io.*;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

//import com.fp.example.Price_Check;
import com.thoughtworks.selenium.Wait;

import static org.testng.Assert.assertEquals;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
@Test
public class testing1 {
	WritableWorkbook book;
	Function_File RT = new Function_File();

	/**
	 * @param args
	 */
	public void Round_Trip_Script() throws MalformedURLException, InterruptedException, BiffException, IOException, Exception {
		
	//Variable_File var = new Variable_File();
		
		String FilePath = "C:\\Excel_File\\Test_Data.xls";
		FileInputStream fs = new FileInputStream(FilePath);
		Workbook wb = Workbook.getWorkbook(fs);
		Sheet sh = wb.getSheet(0);

		//Code to write in existing workbook				
//	FileOutputStream f = new FileOutputStream(FilePath,true);
	//   book = Workbook.createWorkbook(f); 
	//     WritableSheet sheet = book.createSheet("output", 0);
			
			
		String start = sh.getCell(0,1).getContents();
		System.out.println(start);

		
		String destination = sh.getCell(1,1).getContents();
		System.out.println(destination);
		
	
		

	//	Code to write from existing workbook
		FileOutputStream f = new FileOutputStream(FilePath,true);
	    book = Workbook.createWorkbook(f); 
	    WritableSheet sheet = book.createSheet("Sheet1", 0);
		
		//Code to write in existing workbook
		
		//Workbook existingBook = Workbook.getWorkbook(FilePath);
		// book = Workbook.createWorkbook(FilePath, existingBook);
		//	sheet = book.getSheet(0);
			
			Label l1 = new Label(1, 1, "hgdfhgdfhdfdhdhdfgerhdfhdhdfhdfdfhdfhdhd");
		sheet.addCell(l1);
			
			//fs.close();
			
			//Code to write in new workbook
			
			//String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
			
			
			
		
		//	FileOutputStream outputfile_g = new FileOutputStream("C:\\Excel_File\\Test_Data.xls");
			//WritableWorkbook book1 = Workbook.createWorkbook(fo);
			//WritableSheet	sheet1 = book.createSheet("Sheet1", 0);
					
					
			
		//
		//String destination = sh.getCell(1,1).getContents();
		//System.out.println(destination);
		
			//.write(Fil);
		book.write();
			book.close();
					
		
		    
		   
		    
	}

}
